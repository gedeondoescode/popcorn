on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Commits since last release
        id: commits
        run: |
          git clone https://github.com/punctuations/strawberry ./tmp/
          cd tmp
          echo "::set-output name=commits::$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)"
          cd ..
          rm -rf ./tmp
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ## Changelog:
            ${{ steps.commits.outputs.commits }}
            
            <sub>This release is automatically generated.</sub>
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  compile_exec:
    needs: ['release']
    name: Compile to executables
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # [!] we need to checkout with tags and commit history
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      - name: Install dependencies for ${{ matrix.config.os }}
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with pyinstaller for ${{ matrix.config.os }}
        run: pyinstaller strawberry.spec
      - name: Upload Release Asset
        if: ${{ matrix.config.os != 'windows-latest' }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/strawberry
          asset_name: strawberry-${{ matrix.config.os }}
          asset_content_type: application/x-executable
      - name: Upload Release Asset Windows
        if: ${{ matrix.config.os == 'windows-latest' }}
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: .\dist\strawberry.exe
          asset_name: strawberry-${{ matrix.config.os }}.exe
          asset_content_type: application/x-executable
